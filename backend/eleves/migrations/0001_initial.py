# Generated by Django 5.2 on 2025-05-13 23:22

import django.core.validators
import django.db.models.deletion
import eleves.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Eleve',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(2)])),
                ('prenom', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(2)])),
                ('rue', models.CharField(blank=True, max_length=200, null=True)),
                ('numero', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.RegexValidator('^\\d+$', message='Le numéro doit contenir uniquement des chiffres.')])),
                ('npa', models.CharField(blank=True, max_length=4, null=True, validators=[django.core.validators.RegexValidator('^\\d{4}$', message='Le NPA doit contenir exactement 4 chiffres.')])),
                ('localite', models.CharField(blank=True, max_length=100, null=True)),
                ('telephone', models.CharField(max_length=15, unique=True, validators=[django.core.validators.RegexValidator('^\\+?\\d{9,15}$', message='Numéro de téléphone invalide.')])),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('date_naissance', models.DateField()),
                ('lieu_naissance', models.CharField(max_length=100)),
                ('sexe', models.CharField(choices=[('F', 'Femme'), ('H', 'Homme')], max_length=1)),
                ('adresse_facturation', models.CharField(blank=True, max_length=200, null=True)),
                ('type_permis', models.CharField(choices=[('E', 'Permis Étudiant'), ('B', 'Permis B'), ('S', 'Permis S'), ('P', 'Pas de Permis')], max_length=1)),
                ('date_permis', models.DateField(blank=True, null=True)),
                ('niveau', models.CharField(choices=[('A1', 'A1'), ('A2', 'A2'), ('B1', 'B1'), ('B2', 'B2'), ('C1', 'C1')], max_length=2)),
                ('langue_maternelle', models.CharField(blank=True, max_length=100, null=True)),
                ('autres_langues', models.CharField(blank=True, max_length=200, null=True)),
                ('src_decouverte', models.CharField(blank=True, max_length=200, null=True)),
                ('commentaires', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Pays',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indicatif', models.CharField(max_length=5)),
                ('nom', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('fichier', models.FileField(upload_to='eleves/documents/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg', 'jpeg', 'png']), eleves.validators.file_size_validator])),
                ('date_ajout', models.DateField(auto_now_add=True)),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='eleves.eleve')),
            ],
            options={
                'ordering': ['-date_ajout'],
            },
        ),
        migrations.CreateModel(
            name='Garant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(2)])),
                ('prenom', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(2)])),
                ('rue', models.CharField(blank=True, max_length=200, null=True)),
                ('numero', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.RegexValidator('^\\d+$', message='Le numéro doit contenir uniquement des chiffres.')])),
                ('npa', models.CharField(blank=True, max_length=4, null=True, validators=[django.core.validators.RegexValidator('^\\d{4}$', message='Le NPA doit contenir exactement 4 chiffres.')])),
                ('localite', models.CharField(blank=True, max_length=100, null=True)),
                ('telephone', models.CharField(max_length=15, unique=True, validators=[django.core.validators.RegexValidator('^\\+?\\d{9,15}$', message='Numéro de téléphone invalide.')])),
                ('email', models.EmailField(max_length=254, unique=True)),
            ],
            options={
                'ordering': ['nom', 'prenom'],
                'constraints': [models.UniqueConstraint(fields=('nom', 'prenom', 'telephone', 'email'), name='unique_garant')],
            },
        ),
        migrations.AddField(
            model_name='eleve',
            name='garant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='eleves', to='eleves.garant'),
        ),
        migrations.AddField(
            model_name='eleve',
            name='pays',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eleves', to='eleves.pays'),
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_test', models.DateField()),
                ('niveau', models.CharField(choices=[('A1', 'A1'), ('A2', 'A2'), ('B1', 'B1'), ('B2', 'B2'), ('C1', 'C1')], max_length=2)),
                ('note', models.DecimalField(decimal_places=2, max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)])),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tests', to='eleves.eleve')),
            ],
            options={
                'ordering': ['-date_test'],
            },
        ),
        migrations.AddIndex(
            model_name='eleve',
            index=models.Index(fields=['nom'], name='eleves_elev_nom_0d618a_idx'),
        ),
        migrations.AddIndex(
            model_name='eleve',
            index=models.Index(fields=['prenom'], name='eleves_elev_prenom_6cc82a_idx'),
        ),
        migrations.AddIndex(
            model_name='eleve',
            index=models.Index(fields=['date_naissance'], name='eleves_elev_date_na_bd38c6_idx'),
        ),
    ]
